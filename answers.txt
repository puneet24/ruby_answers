
1)	Ruby Method for finding factorial
def factorial(no)
    f = 1; for i in 1..no; f *= i; end; f
end

2)	SublimeText
3)	Ruby method to check that 1 string contains another or not.
def exists(str1, str2)
    str1,include? Str2
end

4)	
5)	
class Admin                           # Declaring class admin
    cattr_accessor :tabs              # getter and setter methods for class instance variable named tabs
    class << self                     # This is the advanced way to do this, is to define a method inside the Class instance itself. This is referred to as the eigenclass or the singleton class and it uses the self keyword to open a new context where the Class instance is held in self
        def add_tab(tab)              # Definition of class instance method named add_tab
            @@tabs = @@tabs | [tab]   # setting union of (@@tabs, and tab) array and taking unique values out of that
        end
        def tabs                      # Definition of class instance method named tabs
            @@tabs.sort               # returning sorted tabs in ascending order
        end
	end
end	

## In ruby last line is by default returning in any method.	

sql queries :-

select programmers.programmer, technologies.technology technology from programmers left join programmers_technologies on programmers.id = programmers_technologies.programmer_id left join technologies on programmers_technologies.technology_id = technologies.id where programmers.is_senior = 1



select programmers.programmer, technologies.technology technology from programmers left join programmers_technologies on programmers.id = programmers_technologies.programmer_id left join technologies on programmers_technologies.technology_id = technologies.id where technolgies.technology = 'p%' or technolgies.technology = '%e%' 

select p1.programmer, p2.programmer from programmers as p1 inner join programmers as p2 on p1.id = p2.friend_id 

select p1.programmer from programmers as p1 left join join programmers as p2 on p1.id = p2.friend_id where p2.friend_id = null;

select programmers.programmer, technologies.technology technology from programmers left join programmers_technologies on programmers.id = programmers_technologies.programmer_id left join technologies on programmers_technologies.technology_id = technologies.id where programmers.experience > 7 order by technologies.technology

# need to figure out last 2 queries

select technologies.technology, STUFF((SELECT ',' + COALESCE(programmers.programmer)), '') 
FROM programmers p1
INNER JOIN technologies t on p1.programmer = t.TerritoryID
WHERE et.EmployeeID = e.EmployeeId
FOR XML PATH('') ), 1, 1, '') as names technology from programmers left join programmers_technologies on programmers.id = programmers_technologies.programmer_id left join technologies on programmers_technologies.technology_id = technologies.id group by 

SELECT e.EmployeeId, e.FirstName, e.LastName,
STUFF((SELECT ',' + COALESCE(LTRIM(RTRIM(t.TerritoryDescription)), '') 
FROM EmployeeTerritories et
INNER JOIN Territories t on et.TerritoryID = t.TerritoryID
WHERE et.EmployeeID = e.EmployeeId
FOR XML PATH('') ), 1, 1, '') as TerritoryList
FROM Employees e

